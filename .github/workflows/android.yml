name: CI

on:
  push:
    branches:
      - main
      - develop
    paths-ignore:
      - docs/**
      - README.md
      - LICENSE
  pull_request:
    branches:
      - develop
    paths-ignore:
      - docs/**
      - README.md
      - LICENSE

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Displays the Android dependencies of the project
        run: ./gradlew androidDependencies

      - name: Run Compile
        run: ./gradlew assembleDebug

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Test with Gradle
        run: ./gradlew test --stacktrace

      - name: Get code coverage for JaCoCo
        run: ./gradlew jacocoDevelopDebugTestReport

      - name: Upload code coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results and code coverage Artifact
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: results
          path: |
            **/build/reports/tests/**/*
            **/build/reports/test-results/**/*
            **/build/reports/jacoco/**/*
          if-no-files-found: warn
          retention-days: 14

  ktlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install ktlint
        run: |
          curl -sSLO https://github.com/pinterest/ktlint/releases/download/0.42.1/ktlint
          chmod a+x ktlint
          sudo mv ktlint /usr/local/bin/
      - name: Lint with ktlint
        run: ktlint --reporter=checkstyle,output=build/ktlint-report.xml
        continue-on-error: true

      - name: Show results on GitHub
        uses: yutailang0119/action-ktlint@v1
        with:
          xml_path: build/ktlint-report.xml

      - name: Upload results Artifact
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: results
          path: |
            **/build/ktlint-report.xml
          if-no-files-found: error
          retention-days: 14
